name: Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_RETRY: 10
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Configure Git for dependencies
      run: |
        git config --global url."https://gitlab.com/".insteadOf "git@gitlab.com:"
        git config --global url."https://github.com/".insteadOf "git@github.com:"
        git config --global http.postBuffer 524288000
        git config --global http.maxRequestBuffer 100M
    
    - name: Configure Cargo for network resilience
      run: |
        mkdir -p ~/.cargo
        cat >> ~/.cargo/config.toml << 'EOF'
        [net]
        retry = 10
        git-fetch-with-cli = true
        
        [http]
        timeout = 60
        multiplexing = false
        EOF
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo test --verbose